// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render correctly image 1`] = `
<div
  className="panel"
>
  <ConfigProvider
    theme={
      {
        "components": {
          "Button": {
            "colorText": "#494949",
            "colorTextDisabled": "#CECECE",
            "controlHeight": 24,
            "fontSize": 24,
            "lineHeight": 1,
            "lineWidth": 0,
          },
        },
      }
    }
  >
    <div
      className="row"
    >
      <div
        className="dimensions"
      >
        <div
          className="dimension"
          key="x"
        >
          <div
            className="label"
          >
            X
          </div>
          <UnitInput
            abbr={false}
            className={
              {
                "dimension-input": true,
              }
            }
            defaultValue={0}
            disabled={false}
            displayMultiValue={false}
            forceUsePropsUnit={false}
            getValue={[Function]}
            id="x_position"
            isDoOnInput={false}
            max={9007199254740991}
            min={-9007199254740991}
            onBlur={[Function]}
            onFocus={[Function]}
            onKeyUp={[Function]}
            step={1}
            type="text"
            unit="mm"
          />
        </div>
        <div
          className="dimension"
          key="y"
        >
          <div
            className="label"
          >
            Y
          </div>
          <UnitInput
            abbr={false}
            className={
              {
                "dimension-input": true,
              }
            }
            defaultValue={0}
            disabled={false}
            displayMultiValue={false}
            forceUsePropsUnit={false}
            getValue={[Function]}
            id="y_position"
            isDoOnInput={false}
            max={9007199254740991}
            min={-9007199254740991}
            onBlur={[Function]}
            onFocus={[Function]}
            onKeyUp={[Function]}
            step={1}
            type="text"
            unit="mm"
          />
        </div>
        <div
          className="dimension"
          key="w"
        >
          <div
            className="label"
          >
            W
          </div>
          <UnitInput
            abbr={false}
            className={
              {
                "dimension-input": true,
              }
            }
            defaultValue={108}
            disabled={false}
            displayMultiValue={false}
            forceUsePropsUnit={false}
            getValue={[Function]}
            id="width"
            isDoOnInput={false}
            max={9007199254740991}
            min={-9007199254740991}
            onBlur={[Function]}
            onFocus={[Function]}
            onKeyUp={[Function]}
            step={1}
            type="text"
            unit="mm"
          />
        </div>
        <div
          className="dimension"
          key="h"
        >
          <div
            className="label"
          >
            H
          </div>
          <UnitInput
            abbr={false}
            className={
              {
                "dimension-input": true,
              }
            }
            defaultValue={152.6}
            disabled={false}
            displayMultiValue={false}
            forceUsePropsUnit={false}
            getValue={[Function]}
            id="height"
            isDoOnInput={false}
            max={9007199254740991}
            min={-9007199254740991}
            onBlur={[Function]}
            onFocus={[Function]}
            onKeyUp={[Function]}
            step={1}
            type="text"
            unit="mm"
          />
        </div>
      </div>
      <Button
        icon={<svgr-url />}
        id="lock"
        key="lock"
        onClick={[Function]}
        type="text"
      />
    </div>
    <div
      className="row"
    >
      <div
        className="dimension"
        key="rot"
      >
        <div
          className="label img"
        >
          <svgr-url />
        </div>
        <UnitInput
          abbr={false}
          className={
            {
              "dimension-input": true,
            }
          }
          defaultValue={0}
          disabled={false}
          displayMultiValue={false}
          forceUsePropsUnit={false}
          getValue={[Function]}
          id="rotate"
          isDoOnInput={false}
          max={9007199254740991}
          min={-9007199254740991}
          onBlur={[Function]}
          onFocus={[Function]}
          onKeyUp={[Function]}
          step={1}
          type="text"
          unit="deg"
        />
      </div>
      <FlipButtons />
    </div>
  </ConfigProvider>
</div>
`;

exports[`should render correctly in mobile image 1`] = `
<div
  className="container"
>
  <ObjectPanelDivider />
  <ObjectPanelNumber
    id="width"
    key="w"
    label="W"
    updateValue={[Function]}
    value={108}
  />
  <ObjectPanelItem
    content={<svgr-url />}
    id="lock"
    key="lock"
    onClick={[Function]}
  />
  <ObjectPanelNumber
    id="height"
    key="h"
    label="H"
    updateValue={[Function]}
    value={152.6}
  />
  <ObjectPanelNumber
    id="rotate"
    key="rot"
    label="Rotate"
    unit="degree"
    updateValue={[Function]}
    value={0}
  />
  <ObjectPanelNumber
    id="x_position"
    key="x"
    label="X"
    updateValue={[Function]}
    value={0}
  />
  <ObjectPanelNumber
    id="y_position"
    key="y"
    label="Y"
    updateValue={[Function]}
    value={0}
  />
  <FlipButtons />
</div>
`;

exports[`should render correctly in mobile no elements 1`] = `
<div
  className="container"
>
  <ObjectPanelDivider />
  <ObjectPanelNumber
    id="x_position"
    key="x"
    label="X"
    updateValue={[Function]}
    value={0}
  />
  <ObjectPanelNumber
    id="y_position"
    key="y"
    label="Y"
    updateValue={[Function]}
    value={0}
  />
  <ObjectPanelNumber
    id="width"
    key="w"
    label="W"
    updateValue={[Function]}
    value={0}
  />
  <ObjectPanelNumber
    id="height"
    key="h"
    label="H"
    updateValue={[Function]}
    value={0}
  />
  <FlipButtons />
</div>
`;

exports[`should render correctly in mobile unsupported element 1`] = `
<div
  className="container"
>
  <ObjectPanelDivider />
  <ObjectPanelNumber
    id="x_position"
    key="x"
    label="X"
    updateValue={[Function]}
    value={0}
  />
  <ObjectPanelNumber
    id="y_position"
    key="y"
    label="Y"
    updateValue={[Function]}
    value={0}
  />
  <ObjectPanelNumber
    id="width"
    key="w"
    label="W"
    updateValue={[Function]}
    value={0}
  />
  <ObjectPanelNumber
    id="height"
    key="h"
    label="H"
    updateValue={[Function]}
    value={0}
  />
  <FlipButtons />
</div>
`;

exports[`should render correctly no elements 1`] = `
<div
  className="panel"
>
  <ConfigProvider
    theme={
      {
        "components": {
          "Button": {
            "colorText": "#494949",
            "colorTextDisabled": "#CECECE",
            "controlHeight": 24,
            "fontSize": 24,
            "lineHeight": 1,
            "lineWidth": 0,
          },
        },
      }
    }
  >
    <div
      className="row"
    >
      <div
        className="dimensions"
      >
        <div
          className="dimension"
          key="x"
        >
          <div
            className="label"
          >
            X
          </div>
          <UnitInput
            abbr={false}
            className={
              {
                "dimension-input": true,
              }
            }
            defaultValue={0}
            disabled={false}
            displayMultiValue={false}
            forceUsePropsUnit={false}
            getValue={[Function]}
            id="x_position"
            isDoOnInput={false}
            max={9007199254740991}
            min={-9007199254740991}
            onBlur={[Function]}
            onFocus={[Function]}
            onKeyUp={[Function]}
            step={1}
            type="text"
            unit="mm"
          />
        </div>
        <div
          className="dimension"
          key="y"
        >
          <div
            className="label"
          >
            Y
          </div>
          <UnitInput
            abbr={false}
            className={
              {
                "dimension-input": true,
              }
            }
            defaultValue={0}
            disabled={false}
            displayMultiValue={false}
            forceUsePropsUnit={false}
            getValue={[Function]}
            id="y_position"
            isDoOnInput={false}
            max={9007199254740991}
            min={-9007199254740991}
            onBlur={[Function]}
            onFocus={[Function]}
            onKeyUp={[Function]}
            step={1}
            type="text"
            unit="mm"
          />
        </div>
        <div
          className="dimension"
          key="w"
        >
          <div
            className="label"
          >
            W
          </div>
          <UnitInput
            abbr={false}
            className={
              {
                "dimension-input": true,
              }
            }
            defaultValue={0}
            disabled={false}
            displayMultiValue={false}
            forceUsePropsUnit={false}
            getValue={[Function]}
            id="width"
            isDoOnInput={false}
            max={9007199254740991}
            min={-9007199254740991}
            onBlur={[Function]}
            onFocus={[Function]}
            onKeyUp={[Function]}
            step={1}
            type="text"
            unit="mm"
          />
        </div>
        <div
          className="dimension"
          key="h"
        >
          <div
            className="label"
          >
            H
          </div>
          <UnitInput
            abbr={false}
            className={
              {
                "dimension-input": true,
              }
            }
            defaultValue={0}
            disabled={false}
            displayMultiValue={false}
            forceUsePropsUnit={false}
            getValue={[Function]}
            id="height"
            isDoOnInput={false}
            max={9007199254740991}
            min={-9007199254740991}
            onBlur={[Function]}
            onFocus={[Function]}
            onKeyUp={[Function]}
            step={1}
            type="text"
            unit="mm"
          />
        </div>
      </div>
      <Button
        icon={<svgr-url />}
        id="lock"
        key="lock"
        onClick={[Function]}
        type="text"
      />
    </div>
    <div
      className="row"
    >
      <div
        className="dimension"
        key="rot"
      >
        <div
          className="label img"
        >
          <svgr-url />
        </div>
        <UnitInput
          abbr={false}
          className={
            {
              "dimension-input": true,
            }
          }
          defaultValue={0}
          disabled={false}
          displayMultiValue={false}
          forceUsePropsUnit={false}
          getValue={[Function]}
          id="rotate"
          isDoOnInput={false}
          max={9007199254740991}
          min={-9007199254740991}
          onBlur={[Function]}
          onFocus={[Function]}
          onKeyUp={[Function]}
          step={1}
          type="text"
          unit="deg"
        />
      </div>
      <FlipButtons />
    </div>
  </ConfigProvider>
</div>
`;

exports[`should render correctly unsupported element 1`] = `
<div
  className="panel"
>
  <ConfigProvider
    theme={
      {
        "components": {
          "Button": {
            "colorText": "#494949",
            "colorTextDisabled": "#CECECE",
            "controlHeight": 24,
            "fontSize": 24,
            "lineHeight": 1,
            "lineWidth": 0,
          },
        },
      }
    }
  >
    <div
      className="row"
    >
      <div
        className="dimensions"
      >
        <div
          className="dimension"
          key="x"
        >
          <div
            className="label"
          >
            X
          </div>
          <UnitInput
            abbr={false}
            className={
              {
                "dimension-input": true,
              }
            }
            defaultValue={0}
            disabled={false}
            displayMultiValue={false}
            forceUsePropsUnit={false}
            getValue={[Function]}
            id="x_position"
            isDoOnInput={false}
            max={9007199254740991}
            min={-9007199254740991}
            onBlur={[Function]}
            onFocus={[Function]}
            onKeyUp={[Function]}
            step={1}
            type="text"
            unit="mm"
          />
        </div>
        <div
          className="dimension"
          key="y"
        >
          <div
            className="label"
          >
            Y
          </div>
          <UnitInput
            abbr={false}
            className={
              {
                "dimension-input": true,
              }
            }
            defaultValue={0}
            disabled={false}
            displayMultiValue={false}
            forceUsePropsUnit={false}
            getValue={[Function]}
            id="y_position"
            isDoOnInput={false}
            max={9007199254740991}
            min={-9007199254740991}
            onBlur={[Function]}
            onFocus={[Function]}
            onKeyUp={[Function]}
            step={1}
            type="text"
            unit="mm"
          />
        </div>
        <div
          className="dimension"
          key="w"
        >
          <div
            className="label"
          >
            W
          </div>
          <UnitInput
            abbr={false}
            className={
              {
                "dimension-input": true,
              }
            }
            defaultValue={0}
            disabled={false}
            displayMultiValue={false}
            forceUsePropsUnit={false}
            getValue={[Function]}
            id="width"
            isDoOnInput={false}
            max={9007199254740991}
            min={-9007199254740991}
            onBlur={[Function]}
            onFocus={[Function]}
            onKeyUp={[Function]}
            step={1}
            type="text"
            unit="mm"
          />
        </div>
        <div
          className="dimension"
          key="h"
        >
          <div
            className="label"
          >
            H
          </div>
          <UnitInput
            abbr={false}
            className={
              {
                "dimension-input": true,
              }
            }
            defaultValue={0}
            disabled={false}
            displayMultiValue={false}
            forceUsePropsUnit={false}
            getValue={[Function]}
            id="height"
            isDoOnInput={false}
            max={9007199254740991}
            min={-9007199254740991}
            onBlur={[Function]}
            onFocus={[Function]}
            onKeyUp={[Function]}
            step={1}
            type="text"
            unit="mm"
          />
        </div>
      </div>
      <Button
        icon={<svgr-url />}
        id="lock"
        key="lock"
        onClick={[Function]}
        type="text"
      />
    </div>
    <div
      className="row"
    >
      <div
        className="dimension"
        key="rot"
      >
        <div
          className="label img"
        >
          <svgr-url />
        </div>
        <UnitInput
          abbr={false}
          className={
            {
              "dimension-input": true,
            }
          }
          defaultValue={0}
          disabled={false}
          displayMultiValue={false}
          forceUsePropsUnit={false}
          getValue={[Function]}
          id="rotate"
          isDoOnInput={false}
          max={9007199254740991}
          min={-9007199254740991}
          onBlur={[Function]}
          onFocus={[Function]}
          onKeyUp={[Function]}
          step={1}
          type="text"
          unit="deg"
        />
      </div>
      <FlipButtons />
    </div>
  </ConfigProvider>
</div>
`;
