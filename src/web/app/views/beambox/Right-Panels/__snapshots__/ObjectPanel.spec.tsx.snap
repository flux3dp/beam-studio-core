// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render correctly in mobile no elements 1`] = `
<ObjectPanel
  elem={
    <path
      id="svg_1"
    />
  }
>
  <div
    className="container"
    id="object-panel"
  >
    <div
      className="tools"
    >
      <DummyObjectPanelItem
        content={<svgr-url />}
        id="delete"
        label="Delete"
        onClick={[MockFunction]}
      >
        <div>
          This is dummy ObjectPanelItem
        </div>
      </DummyObjectPanelItem>
      <DummyObjectPanelItem
        content={<svgr-url />}
        id="duplicate"
        label="Duplicate"
        onClick={[Function]}
      >
        <div>
          This is dummy ObjectPanelItem
        </div>
      </DummyObjectPanelItem>
      <DummyObjectPanelItem
        autoClose={false}
        content={<svgr-url />}
        id="parameter"
        label="Parameters"
        onClick={[Function]}
      >
        <div>
          This is dummy ObjectPanelItem
        </div>
      </DummyObjectPanelItem>
    </div>
    <DummyOptionsPanel
      elem={
        <path
          id="svg_1"
        />
      }
      polygonSides={5}
      rx={1}
      updateDimensionValues={[MockFunction]}
      updateObjectPanel={[MockFunction]}
    >
      <div>
        This is dummy OptionsPanel
      </div>
    </DummyOptionsPanel>
    <DummyDimensionPanel
      elem={
        <path
          id="svg_1"
        />
      }
      getDimensionValues={[MockFunction]}
      updateDimensionValues={[MockFunction]}
    >
      <div>
        This is dummy DimensionPanel
      </div>
    </DummyDimensionPanel>
    <div
      className="tools"
    >
      <DummyObjectPanelDivider>
        <div>
          This is dummy ObjectPanelDivider
        </div>
      </DummyObjectPanelDivider>
      <DummyObjectPanelItem
        content={<svgr-url />}
        disabled={true}
        id="group"
        label="Group"
        onClick={[MockFunction]}
      >
        <div>
          This is dummy ObjectPanelItem
        </div>
      </DummyObjectPanelItem>
      <DummyObjectPanelItem
        content={<svgr-url />}
        disabled={true}
        id="ungroup"
        label="Ungroup"
        onClick={[MockFunction]}
      >
        <div>
          This is dummy ObjectPanelItem
        </div>
      </DummyObjectPanelItem>
      <DummyObjectPanelActionList
        actions={
          [
            {
              "icon": <svgr-url />,
              "label": "Top Align",
              "onClick": [MockFunction],
            },
            {
              "icon": <svgr-url />,
              "label": "Middle Align",
              "onClick": [MockFunction],
            },
            {
              "icon": <svgr-url />,
              "label": "Bottom Align",
              "onClick": [MockFunction],
            },
            {
              "icon": <svgr-url />,
              "label": "Left Align",
              "onClick": [MockFunction],
            },
            {
              "icon": <svgr-url />,
              "label": "Center Align",
              "onClick": [MockFunction],
            },
            {
              "icon": <svgr-url />,
              "label": "Right Align",
              "onClick": [MockFunction],
            },
          ]
        }
        content={<svgr-url />}
        id="align"
        label="Align"
      >
        <div>
          This is dummy ObjectPanelActionList
        </div>
      </DummyObjectPanelActionList>
      <DummyObjectPanelActionList
        actions={
          [
            {
              "icon": <svgr-url />,
              "label": "Horizontal Distribute",
              "onClick": [MockFunction],
            },
            {
              "icon": <svgr-url />,
              "label": "Vertical Distribute",
              "onClick": [MockFunction],
            },
          ]
        }
        content={<svgr-url />}
        disabled={true}
        id="distribute"
        label="Distribute"
      >
        <div>
          This is dummy ObjectPanelActionList
        </div>
      </DummyObjectPanelActionList>
      <DummyObjectPanelActionList
        actions={
          [
            {
              "disabled": true,
              "icon": <svgr-url />,
              "label": "Union",
              "onClick": [Function],
            },
            {
              "disabled": true,
              "icon": <svgr-url />,
              "label": "Subtract",
              "onClick": [Function],
            },
            {
              "disabled": true,
              "icon": <svgr-url />,
              "label": "Intersect",
              "onClick": [Function],
            },
            {
              "disabled": true,
              "icon": <svgr-url />,
              "label": "Difference",
              "onClick": [Function],
            },
          ]
        }
        content={<svgr-url />}
        disabled={true}
        id="boolean"
        label="Boolean"
      >
        <div>
          This is dummy ObjectPanelActionList
        </div>
      </DummyObjectPanelActionList>
    </div>
    <DummyActionsPanel
      elem={
        <path
          id="svg_1"
        />
      }
    >
      <div>
        This is dummy ActionsPanel
      </div>
    </DummyActionsPanel>
  </div>
</ObjectPanel>
`;

exports[`should render correctly in mobile one element is g element 1`] = `
<ObjectPanel
  elem={
    <g
      id="svg_1"
    />
  }
>
  <div
    className="container"
    id="object-panel"
  >
    <div
      className="tools"
    >
      <DummyObjectPanelItem
        content={<svgr-url />}
        id="delete"
        label="Delete"
        onClick={[MockFunction]}
      >
        <div>
          This is dummy ObjectPanelItem
        </div>
      </DummyObjectPanelItem>
      <DummyObjectPanelItem
        content={<svgr-url />}
        id="duplicate"
        label="Duplicate"
        onClick={[Function]}
      >
        <div>
          This is dummy ObjectPanelItem
        </div>
      </DummyObjectPanelItem>
      <DummyObjectPanelItem
        autoClose={false}
        content={<svgr-url />}
        id="parameter"
        label="Parameters"
        onClick={[Function]}
      >
        <div>
          This is dummy ObjectPanelItem
        </div>
      </DummyObjectPanelItem>
    </div>
    <DummyOptionsPanel
      elem={
        <g
          id="svg_1"
        />
      }
      polygonSides={5}
      rx={1}
      updateDimensionValues={[MockFunction]}
      updateObjectPanel={[MockFunction]}
    >
      <div>
        This is dummy OptionsPanel
      </div>
    </DummyOptionsPanel>
    <DummyDimensionPanel
      elem={
        <g
          id="svg_1"
        />
      }
      getDimensionValues={[MockFunction]}
      updateDimensionValues={[MockFunction]}
    >
      <div>
        This is dummy DimensionPanel
      </div>
    </DummyDimensionPanel>
    <div
      className="tools"
    >
      <DummyObjectPanelDivider>
        <div>
          This is dummy ObjectPanelDivider
        </div>
      </DummyObjectPanelDivider>
      <DummyObjectPanelItem
        content={<svgr-url />}
        disabled={true}
        id="group"
        label="Group"
        onClick={[MockFunction]}
      >
        <div>
          This is dummy ObjectPanelItem
        </div>
      </DummyObjectPanelItem>
      <DummyObjectPanelItem
        content={<svgr-url />}
        disabled={false}
        id="ungroup"
        label="Ungroup"
        onClick={[MockFunction]}
      >
        <div>
          This is dummy ObjectPanelItem
        </div>
      </DummyObjectPanelItem>
      <DummyObjectPanelActionList
        actions={
          [
            {
              "icon": <svgr-url />,
              "label": "Top Align",
              "onClick": [MockFunction],
            },
            {
              "icon": <svgr-url />,
              "label": "Middle Align",
              "onClick": [MockFunction],
            },
            {
              "icon": <svgr-url />,
              "label": "Bottom Align",
              "onClick": [MockFunction],
            },
            {
              "icon": <svgr-url />,
              "label": "Left Align",
              "onClick": [MockFunction],
            },
            {
              "icon": <svgr-url />,
              "label": "Center Align",
              "onClick": [MockFunction],
            },
            {
              "icon": <svgr-url />,
              "label": "Right Align",
              "onClick": [MockFunction],
            },
          ]
        }
        content={<svgr-url />}
        id="align"
        label="Align"
      >
        <div>
          This is dummy ObjectPanelActionList
        </div>
      </DummyObjectPanelActionList>
      <DummyObjectPanelActionList
        actions={
          [
            {
              "icon": <svgr-url />,
              "label": "Horizontal Distribute",
              "onClick": [MockFunction],
            },
            {
              "icon": <svgr-url />,
              "label": "Vertical Distribute",
              "onClick": [MockFunction],
            },
          ]
        }
        content={<svgr-url />}
        disabled={true}
        id="distribute"
        label="Distribute"
      >
        <div>
          This is dummy ObjectPanelActionList
        </div>
      </DummyObjectPanelActionList>
      <DummyObjectPanelActionList
        actions={
          [
            {
              "disabled": true,
              "icon": <svgr-url />,
              "label": "Union",
              "onClick": [Function],
            },
            {
              "disabled": true,
              "icon": <svgr-url />,
              "label": "Subtract",
              "onClick": [Function],
            },
            {
              "disabled": true,
              "icon": <svgr-url />,
              "label": "Intersect",
              "onClick": [Function],
            },
            {
              "disabled": true,
              "icon": <svgr-url />,
              "label": "Difference",
              "onClick": [Function],
            },
          ]
        }
        content={<svgr-url />}
        disabled={true}
        id="boolean"
        label="Boolean"
      >
        <div>
          This is dummy ObjectPanelActionList
        </div>
      </DummyObjectPanelActionList>
    </div>
    <DummyActionsPanel
      elem={
        <g
          id="svg_1"
        />
      }
    >
      <div>
        This is dummy ActionsPanel
      </div>
    </DummyActionsPanel>
  </div>
</ObjectPanel>
`;

exports[`should render correctly in mobile one element not g element 1`] = `
<ObjectPanel
  elem={
    <rect
      id="svg_1"
    />
  }
>
  <div
    className="container"
    id="object-panel"
  >
    <div
      className="tools"
    >
      <DummyObjectPanelItem
        content={<svgr-url />}
        id="delete"
        label="Delete"
        onClick={[MockFunction]}
      >
        <div>
          This is dummy ObjectPanelItem
        </div>
      </DummyObjectPanelItem>
      <DummyObjectPanelItem
        content={<svgr-url />}
        id="duplicate"
        label="Duplicate"
        onClick={[Function]}
      >
        <div>
          This is dummy ObjectPanelItem
        </div>
      </DummyObjectPanelItem>
      <DummyObjectPanelItem
        autoClose={false}
        content={<svgr-url />}
        id="parameter"
        label="Parameters"
        onClick={[Function]}
      >
        <div>
          This is dummy ObjectPanelItem
        </div>
      </DummyObjectPanelItem>
    </div>
    <DummyOptionsPanel
      elem={
        <rect
          id="svg_1"
        />
      }
      polygonSides={5}
      rx={1}
      updateDimensionValues={[MockFunction]}
      updateObjectPanel={[MockFunction]}
    >
      <div>
        This is dummy OptionsPanel
      </div>
    </DummyOptionsPanel>
    <DummyDimensionPanel
      elem={
        <rect
          id="svg_1"
        />
      }
      getDimensionValues={[MockFunction]}
      updateDimensionValues={[MockFunction]}
    >
      <div>
        This is dummy DimensionPanel
      </div>
    </DummyDimensionPanel>
    <div
      className="tools"
    >
      <DummyObjectPanelDivider>
        <div>
          This is dummy ObjectPanelDivider
        </div>
      </DummyObjectPanelDivider>
      <DummyObjectPanelItem
        content={<svgr-url />}
        disabled={true}
        id="group"
        label="Group"
        onClick={[MockFunction]}
      >
        <div>
          This is dummy ObjectPanelItem
        </div>
      </DummyObjectPanelItem>
      <DummyObjectPanelItem
        content={<svgr-url />}
        disabled={true}
        id="ungroup"
        label="Ungroup"
        onClick={[MockFunction]}
      >
        <div>
          This is dummy ObjectPanelItem
        </div>
      </DummyObjectPanelItem>
      <DummyObjectPanelActionList
        actions={
          [
            {
              "icon": <svgr-url />,
              "label": "Top Align",
              "onClick": [MockFunction],
            },
            {
              "icon": <svgr-url />,
              "label": "Middle Align",
              "onClick": [MockFunction],
            },
            {
              "icon": <svgr-url />,
              "label": "Bottom Align",
              "onClick": [MockFunction],
            },
            {
              "icon": <svgr-url />,
              "label": "Left Align",
              "onClick": [MockFunction],
            },
            {
              "icon": <svgr-url />,
              "label": "Center Align",
              "onClick": [MockFunction],
            },
            {
              "icon": <svgr-url />,
              "label": "Right Align",
              "onClick": [MockFunction],
            },
          ]
        }
        content={<svgr-url />}
        id="align"
        label="Align"
      >
        <div>
          This is dummy ObjectPanelActionList
        </div>
      </DummyObjectPanelActionList>
      <DummyObjectPanelActionList
        actions={
          [
            {
              "icon": <svgr-url />,
              "label": "Horizontal Distribute",
              "onClick": [MockFunction],
            },
            {
              "icon": <svgr-url />,
              "label": "Vertical Distribute",
              "onClick": [MockFunction],
            },
          ]
        }
        content={<svgr-url />}
        disabled={true}
        id="distribute"
        label="Distribute"
      >
        <div>
          This is dummy ObjectPanelActionList
        </div>
      </DummyObjectPanelActionList>
      <DummyObjectPanelActionList
        actions={
          [
            {
              "disabled": true,
              "icon": <svgr-url />,
              "label": "Union",
              "onClick": [Function],
            },
            {
              "disabled": true,
              "icon": <svgr-url />,
              "label": "Subtract",
              "onClick": [Function],
            },
            {
              "disabled": true,
              "icon": <svgr-url />,
              "label": "Intersect",
              "onClick": [Function],
            },
            {
              "disabled": true,
              "icon": <svgr-url />,
              "label": "Difference",
              "onClick": [Function],
            },
          ]
        }
        content={<svgr-url />}
        disabled={true}
        id="boolean"
        label="Boolean"
      >
        <div>
          This is dummy ObjectPanelActionList
        </div>
      </DummyObjectPanelActionList>
    </div>
    <DummyActionsPanel
      elem={
        <rect
          id="svg_1"
        />
      }
    >
      <div>
        This is dummy ActionsPanel
      </div>
    </DummyActionsPanel>
  </div>
</ObjectPanel>
`;

exports[`should render correctly in mobile two elements contains other types of elements 1`] = `
<ObjectPanel
  elem={
    <g
      data-tempgroup="true"
      id="svg_3"
    >
      <path
        id="svg_1"
      />
      <line
        id="svg_2"
      />
    </g>
  }
>
  <div
    className="container"
    id="object-panel"
  >
    <div
      className="tools"
    >
      <DummyObjectPanelItem
        content={<svgr-url />}
        id="delete"
        label="Delete"
        onClick={[MockFunction]}
      >
        <div>
          This is dummy ObjectPanelItem
        </div>
      </DummyObjectPanelItem>
      <DummyObjectPanelItem
        content={<svgr-url />}
        id="duplicate"
        label="Duplicate"
        onClick={[Function]}
      >
        <div>
          This is dummy ObjectPanelItem
        </div>
      </DummyObjectPanelItem>
      <DummyObjectPanelItem
        autoClose={false}
        content={<svgr-url />}
        id="parameter"
        label="Parameters"
        onClick={[Function]}
      >
        <div>
          This is dummy ObjectPanelItem
        </div>
      </DummyObjectPanelItem>
    </div>
    <DummyOptionsPanel
      elem={
        <g
          data-tempgroup="true"
          id="svg_3"
        >
          <path
            id="svg_1"
          />
          <line
            id="svg_2"
          />
        </g>
      }
      polygonSides={5}
      rx={1}
      updateDimensionValues={[MockFunction]}
      updateObjectPanel={[MockFunction]}
    >
      <div>
        This is dummy OptionsPanel
      </div>
    </DummyOptionsPanel>
    <DummyDimensionPanel
      elem={
        <g
          data-tempgroup="true"
          id="svg_3"
        >
          <path
            id="svg_1"
          />
          <line
            id="svg_2"
          />
        </g>
      }
      getDimensionValues={[MockFunction]}
      updateDimensionValues={[MockFunction]}
    >
      <div>
        This is dummy DimensionPanel
      </div>
    </DummyDimensionPanel>
    <div
      className="tools"
    >
      <DummyObjectPanelDivider>
        <div>
          This is dummy ObjectPanelDivider
        </div>
      </DummyObjectPanelDivider>
      <DummyObjectPanelItem
        content={<svgr-url />}
        disabled={false}
        id="group"
        label="Group"
        onClick={[MockFunction]}
      >
        <div>
          This is dummy ObjectPanelItem
        </div>
      </DummyObjectPanelItem>
      <DummyObjectPanelItem
        content={<svgr-url />}
        disabled={true}
        id="ungroup"
        label="Ungroup"
        onClick={[MockFunction]}
      >
        <div>
          This is dummy ObjectPanelItem
        </div>
      </DummyObjectPanelItem>
      <DummyObjectPanelActionList
        actions={
          [
            {
              "icon": <svgr-url />,
              "label": "Top Align",
              "onClick": [MockFunction],
            },
            {
              "icon": <svgr-url />,
              "label": "Middle Align",
              "onClick": [MockFunction],
            },
            {
              "icon": <svgr-url />,
              "label": "Bottom Align",
              "onClick": [MockFunction],
            },
            {
              "icon": <svgr-url />,
              "label": "Left Align",
              "onClick": [MockFunction],
            },
            {
              "icon": <svgr-url />,
              "label": "Center Align",
              "onClick": [MockFunction],
            },
            {
              "icon": <svgr-url />,
              "label": "Right Align",
              "onClick": [MockFunction],
            },
          ]
        }
        content={<svgr-url />}
        id="align"
        label="Align"
      >
        <div>
          This is dummy ObjectPanelActionList
        </div>
      </DummyObjectPanelActionList>
      <DummyObjectPanelActionList
        actions={
          [
            {
              "icon": <svgr-url />,
              "label": "Horizontal Distribute",
              "onClick": [MockFunction],
            },
            {
              "icon": <svgr-url />,
              "label": "Vertical Distribute",
              "onClick": [MockFunction],
            },
          ]
        }
        content={<svgr-url />}
        disabled={true}
        id="distribute"
        label="Distribute"
      >
        <div>
          This is dummy ObjectPanelActionList
        </div>
      </DummyObjectPanelActionList>
      <DummyObjectPanelActionList
        actions={
          [
            {
              "disabled": true,
              "icon": <svgr-url />,
              "label": "Union",
              "onClick": [Function],
            },
            {
              "disabled": true,
              "icon": <svgr-url />,
              "label": "Subtract",
              "onClick": [Function],
            },
            {
              "disabled": true,
              "icon": <svgr-url />,
              "label": "Intersect",
              "onClick": [Function],
            },
            {
              "disabled": true,
              "icon": <svgr-url />,
              "label": "Difference",
              "onClick": [Function],
            },
          ]
        }
        content={<svgr-url />}
        disabled={true}
        id="boolean"
        label="Boolean"
      >
        <div>
          This is dummy ObjectPanelActionList
        </div>
      </DummyObjectPanelActionList>
    </div>
    <DummyActionsPanel
      elem={
        <g
          data-tempgroup="true"
          id="svg_3"
        >
          <path
            id="svg_1"
          />
          <line
            id="svg_2"
          />
        </g>
      }
    >
      <div>
        This is dummy ActionsPanel
      </div>
    </DummyActionsPanel>
  </div>
</ObjectPanel>
`;

exports[`should render correctly in mobile two elements contains rect, polygon or ellipse elements 1`] = `
<ObjectPanel
  elem={
    <g
      data-tempgroup="true"
      id="svg_3"
    >
      <rect
        id="svg_1"
      />
      <ellipse
        id="svg_2"
      />
    </g>
  }
>
  <div
    className="container"
    id="object-panel"
  >
    <div
      className="tools"
    >
      <DummyObjectPanelItem
        content={<svgr-url />}
        id="delete"
        label="Delete"
        onClick={[MockFunction]}
      >
        <div>
          This is dummy ObjectPanelItem
        </div>
      </DummyObjectPanelItem>
      <DummyObjectPanelItem
        content={<svgr-url />}
        id="duplicate"
        label="Duplicate"
        onClick={[Function]}
      >
        <div>
          This is dummy ObjectPanelItem
        </div>
      </DummyObjectPanelItem>
      <DummyObjectPanelItem
        autoClose={false}
        content={<svgr-url />}
        id="parameter"
        label="Parameters"
        onClick={[Function]}
      >
        <div>
          This is dummy ObjectPanelItem
        </div>
      </DummyObjectPanelItem>
    </div>
    <DummyOptionsPanel
      elem={
        <g
          data-tempgroup="true"
          id="svg_3"
        >
          <rect
            id="svg_1"
          />
          <ellipse
            id="svg_2"
          />
        </g>
      }
      polygonSides={5}
      rx={1}
      updateDimensionValues={[MockFunction]}
      updateObjectPanel={[MockFunction]}
    >
      <div>
        This is dummy OptionsPanel
      </div>
    </DummyOptionsPanel>
    <DummyDimensionPanel
      elem={
        <g
          data-tempgroup="true"
          id="svg_3"
        >
          <rect
            id="svg_1"
          />
          <ellipse
            id="svg_2"
          />
        </g>
      }
      getDimensionValues={[MockFunction]}
      updateDimensionValues={[MockFunction]}
    >
      <div>
        This is dummy DimensionPanel
      </div>
    </DummyDimensionPanel>
    <div
      className="tools"
    >
      <DummyObjectPanelDivider>
        <div>
          This is dummy ObjectPanelDivider
        </div>
      </DummyObjectPanelDivider>
      <DummyObjectPanelItem
        content={<svgr-url />}
        disabled={false}
        id="group"
        label="Group"
        onClick={[MockFunction]}
      >
        <div>
          This is dummy ObjectPanelItem
        </div>
      </DummyObjectPanelItem>
      <DummyObjectPanelItem
        content={<svgr-url />}
        disabled={true}
        id="ungroup"
        label="Ungroup"
        onClick={[MockFunction]}
      >
        <div>
          This is dummy ObjectPanelItem
        </div>
      </DummyObjectPanelItem>
      <DummyObjectPanelActionList
        actions={
          [
            {
              "icon": <svgr-url />,
              "label": "Top Align",
              "onClick": [MockFunction],
            },
            {
              "icon": <svgr-url />,
              "label": "Middle Align",
              "onClick": [MockFunction],
            },
            {
              "icon": <svgr-url />,
              "label": "Bottom Align",
              "onClick": [MockFunction],
            },
            {
              "icon": <svgr-url />,
              "label": "Left Align",
              "onClick": [MockFunction],
            },
            {
              "icon": <svgr-url />,
              "label": "Center Align",
              "onClick": [MockFunction],
            },
            {
              "icon": <svgr-url />,
              "label": "Right Align",
              "onClick": [MockFunction],
            },
          ]
        }
        content={<svgr-url />}
        id="align"
        label="Align"
      >
        <div>
          This is dummy ObjectPanelActionList
        </div>
      </DummyObjectPanelActionList>
      <DummyObjectPanelActionList
        actions={
          [
            {
              "icon": <svgr-url />,
              "label": "Horizontal Distribute",
              "onClick": [MockFunction],
            },
            {
              "icon": <svgr-url />,
              "label": "Vertical Distribute",
              "onClick": [MockFunction],
            },
          ]
        }
        content={<svgr-url />}
        disabled={true}
        id="distribute"
        label="Distribute"
      >
        <div>
          This is dummy ObjectPanelActionList
        </div>
      </DummyObjectPanelActionList>
      <DummyObjectPanelActionList
        actions={
          [
            {
              "disabled": false,
              "icon": <svgr-url />,
              "label": "Union",
              "onClick": [Function],
            },
            {
              "disabled": false,
              "icon": <svgr-url />,
              "label": "Subtract",
              "onClick": [Function],
            },
            {
              "disabled": false,
              "icon": <svgr-url />,
              "label": "Intersect",
              "onClick": [Function],
            },
            {
              "disabled": false,
              "icon": <svgr-url />,
              "label": "Difference",
              "onClick": [Function],
            },
          ]
        }
        content={<svgr-url />}
        disabled={false}
        id="boolean"
        label="Boolean"
      >
        <div>
          This is dummy ObjectPanelActionList
        </div>
      </DummyObjectPanelActionList>
    </div>
    <DummyActionsPanel
      elem={
        <g
          data-tempgroup="true"
          id="svg_3"
        >
          <rect
            id="svg_1"
          />
          <ellipse
            id="svg_2"
          />
        </g>
      }
    >
      <div>
        This is dummy ActionsPanel
      </div>
    </DummyActionsPanel>
  </div>
</ObjectPanel>
`;

exports[`should render correctly no elements 1`] = `
<ObjectPanel
  elem={null}
>
  <div
    className="container"
    id="object-panel"
  >
    <div
      className="tools"
    >
      <ConfigProvider
        theme={
          {
            "components": {
              "Button": {
                "colorText": "#494949",
                "colorTextDisabled": "#CECECE",
                "controlHeight": 24,
                "fontSize": 24,
                "lineHeight": 1,
                "lineWidth": 0,
              },
            },
          }
        }
      >
        <ProviderChildren
          parentContext={
            {
              "getPrefixCls": [Function],
              "iconPrefixCls": "anticon",
            }
          }
          theme={
            {
              "components": {
                "Button": {
                  "colorText": "#494949",
                  "colorTextDisabled": "#CECECE",
                  "controlHeight": 24,
                  "fontSize": 24,
                  "lineHeight": 1,
                  "lineWidth": 0,
                },
              },
            }
          }
        >
          <FormProvider
            validateMessages={
              {
                "array": {
                  "len": "Must be \${len} \${label}",
                  "max": "At most \${max} \${label}",
                  "min": "At least \${min} \${label}",
                  "range": "The amount of \${label} must be between \${min}-\${max}",
                },
                "date": {
                  "format": "\${label} date format is invalid",
                  "invalid": "\${label} is an invalid date",
                  "parse": "\${label} cannot be converted to a date",
                },
                "default": "Field validation error for \${label}",
                "enum": "\${label} must be one of [\${enum}]",
                "number": {
                  "len": "\${label} must be equal to \${len}",
                  "max": "\${label} must be maximum \${max}",
                  "min": "\${label} must be minimum \${min}",
                  "range": "\${label} must be between \${min}-\${max}",
                },
                "pattern": {
                  "mismatch": "\${label} does not match the pattern \${pattern}",
                },
                "required": "Please enter \${label}",
                "string": {
                  "len": "\${label} must be \${len} characters",
                  "max": "\${label} must be up to \${max} characters",
                  "min": "\${label} must be at least \${min} characters",
                  "range": "\${label} must be between \${min}-\${max} characters",
                },
                "types": {
                  "array": "\${label} is not a valid \${type}",
                  "boolean": "\${label} is not a valid \${type}",
                  "date": "\${label} is not a valid \${type}",
                  "email": "\${label} is not a valid \${type}",
                  "float": "\${label} is not a valid \${type}",
                  "hex": "\${label} is not a valid \${type}",
                  "integer": "\${label} is not a valid \${type}",
                  "method": "\${label} is not a valid \${type}",
                  "number": "\${label} is not a valid \${type}",
                  "object": "\${label} is not a valid \${type}",
                  "regexp": "\${label} is not a valid \${type}",
                  "string": "\${label} is not a valid \${type}",
                  "url": "\${label} is not a valid \${type}",
                },
                "whitespace": "\${label} cannot be a blank character",
              }
            }
          >
            <div
              className="row"
            >
              <div
                className="half left sep"
              >
                <Button
                  disabled={true}
                  icon={<svgr-url />}
                  id="hdist"
                  onClick={[MockFunction]}
                  title="Horizontal Distribute"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={true}
                    id="hdist"
                    onClick={[Function]}
                    title="Horizontal Distribute"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
                <Button
                  disabled={false}
                  icon={<svgr-url />}
                  id="top_align"
                  onClick={[MockFunction]}
                  title="Top Align"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={false}
                    id="top_align"
                    onClick={[Function]}
                    title="Top Align"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
                <Button
                  disabled={false}
                  icon={<svgr-url />}
                  id="middle_align"
                  onClick={[MockFunction]}
                  title="Middle Align"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={false}
                    id="middle_align"
                    onClick={[Function]}
                    title="Middle Align"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
                <Button
                  disabled={false}
                  icon={<svgr-url />}
                  id="bottom_align"
                  onClick={[MockFunction]}
                  title="Bottom Align"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={false}
                    id="bottom_align"
                    onClick={[Function]}
                    title="Bottom Align"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
              </div>
              <div
                className="half right"
              >
                <Button
                  disabled={true}
                  icon={<svgr-url />}
                  id="vdist"
                  onClick={[MockFunction]}
                  title="Vertical Distribute"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={true}
                    id="vdist"
                    onClick={[Function]}
                    title="Vertical Distribute"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
                <Button
                  disabled={false}
                  icon={<svgr-url />}
                  id="left_align"
                  onClick={[MockFunction]}
                  title="Left Align"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={false}
                    id="left_align"
                    onClick={[Function]}
                    title="Left Align"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
                <Button
                  disabled={false}
                  icon={<svgr-url />}
                  id="center_align"
                  onClick={[MockFunction]}
                  title="Center Align"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={false}
                    id="center_align"
                    onClick={[Function]}
                    title="Center Align"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
                <Button
                  disabled={false}
                  icon={<svgr-url />}
                  id="right_align"
                  onClick={[MockFunction]}
                  title="Right Align"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={false}
                    id="right_align"
                    onClick={[Function]}
                    title="Right Align"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
              </div>
            </div>
            <div
              className="row"
            >
              <div
                className="half left"
              >
                <Button
                  disabled={false}
                  icon={<svgr-url />}
                  id="group"
                  onClick={[Function]}
                  title="Group"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={false}
                    id="group"
                    onClick={[Function]}
                    title="Group"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
                <Button
                  disabled={true}
                  icon={<svgr-url />}
                  id="ungroup"
                  onClick={[Function]}
                  title="Ungroup"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={true}
                    id="ungroup"
                    onClick={[Function]}
                    title="Ungroup"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
              </div>
              <div
                className="half right"
              >
                <Button
                  disabled={true}
                  icon={<svgr-url />}
                  id="union"
                  onClick={[Function]}
                  title="Union"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={true}
                    id="union"
                    onClick={[Function]}
                    title="Union"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
                <Button
                  disabled={true}
                  icon={<svgr-url />}
                  id="subtract"
                  onClick={[Function]}
                  title="Subtract"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={true}
                    id="subtract"
                    onClick={[Function]}
                    title="Subtract"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
                <Button
                  disabled={true}
                  icon={<svgr-url />}
                  id="intersect"
                  onClick={[Function]}
                  title="Intersect"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={true}
                    id="intersect"
                    onClick={[Function]}
                    title="Intersect"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
                <Button
                  disabled={true}
                  icon={<svgr-url />}
                  id="difference"
                  onClick={[Function]}
                  title="Difference"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={true}
                    id="difference"
                    onClick={[Function]}
                    title="Difference"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
              </div>
            </div>
          </FormProvider>
        </ProviderChildren>
      </ConfigProvider>
    </div>
    <DummyDimensionPanel
      elem={null}
      getDimensionValues={[MockFunction]}
      updateDimensionValues={[MockFunction]}
    >
      <div>
        This is dummy DimensionPanel
      </div>
    </DummyDimensionPanel>
    <DummyOptionsPanel
      elem={null}
      polygonSides={5}
      rx={1}
      updateDimensionValues={[MockFunction]}
      updateObjectPanel={[MockFunction]}
    >
      <div>
        This is dummy OptionsPanel
      </div>
    </DummyOptionsPanel>
    <DummyActionsPanel
      elem={null}
    >
      <div>
        This is dummy ActionsPanel
      </div>
    </DummyActionsPanel>
  </div>
</ObjectPanel>
`;

exports[`should render correctly one element is g element 1`] = `
<ObjectPanel
  elem={
    <g
      id="svg_1"
    />
  }
>
  <div
    className="container"
    id="object-panel"
  >
    <div
      className="tools"
    >
      <ConfigProvider
        theme={
          {
            "components": {
              "Button": {
                "colorText": "#494949",
                "colorTextDisabled": "#CECECE",
                "controlHeight": 24,
                "fontSize": 24,
                "lineHeight": 1,
                "lineWidth": 0,
              },
            },
          }
        }
      >
        <ProviderChildren
          parentContext={
            {
              "getPrefixCls": [Function],
              "iconPrefixCls": "anticon",
            }
          }
          theme={
            {
              "components": {
                "Button": {
                  "colorText": "#494949",
                  "colorTextDisabled": "#CECECE",
                  "controlHeight": 24,
                  "fontSize": 24,
                  "lineHeight": 1,
                  "lineWidth": 0,
                },
              },
            }
          }
        >
          <FormProvider
            validateMessages={
              {
                "array": {
                  "len": "Must be \${len} \${label}",
                  "max": "At most \${max} \${label}",
                  "min": "At least \${min} \${label}",
                  "range": "The amount of \${label} must be between \${min}-\${max}",
                },
                "date": {
                  "format": "\${label} date format is invalid",
                  "invalid": "\${label} is an invalid date",
                  "parse": "\${label} cannot be converted to a date",
                },
                "default": "Field validation error for \${label}",
                "enum": "\${label} must be one of [\${enum}]",
                "number": {
                  "len": "\${label} must be equal to \${len}",
                  "max": "\${label} must be maximum \${max}",
                  "min": "\${label} must be minimum \${min}",
                  "range": "\${label} must be between \${min}-\${max}",
                },
                "pattern": {
                  "mismatch": "\${label} does not match the pattern \${pattern}",
                },
                "required": "Please enter \${label}",
                "string": {
                  "len": "\${label} must be \${len} characters",
                  "max": "\${label} must be up to \${max} characters",
                  "min": "\${label} must be at least \${min} characters",
                  "range": "\${label} must be between \${min}-\${max} characters",
                },
                "types": {
                  "array": "\${label} is not a valid \${type}",
                  "boolean": "\${label} is not a valid \${type}",
                  "date": "\${label} is not a valid \${type}",
                  "email": "\${label} is not a valid \${type}",
                  "float": "\${label} is not a valid \${type}",
                  "hex": "\${label} is not a valid \${type}",
                  "integer": "\${label} is not a valid \${type}",
                  "method": "\${label} is not a valid \${type}",
                  "number": "\${label} is not a valid \${type}",
                  "object": "\${label} is not a valid \${type}",
                  "regexp": "\${label} is not a valid \${type}",
                  "string": "\${label} is not a valid \${type}",
                  "url": "\${label} is not a valid \${type}",
                },
                "whitespace": "\${label} cannot be a blank character",
              }
            }
          >
            <div
              className="row"
            >
              <div
                className="half left sep"
              >
                <Button
                  disabled={true}
                  icon={<svgr-url />}
                  id="hdist"
                  onClick={[MockFunction]}
                  title="Horizontal Distribute"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={true}
                    id="hdist"
                    onClick={[Function]}
                    title="Horizontal Distribute"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
                <Button
                  disabled={false}
                  icon={<svgr-url />}
                  id="top_align"
                  onClick={[MockFunction]}
                  title="Top Align"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={false}
                    id="top_align"
                    onClick={[Function]}
                    title="Top Align"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
                <Button
                  disabled={false}
                  icon={<svgr-url />}
                  id="middle_align"
                  onClick={[MockFunction]}
                  title="Middle Align"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={false}
                    id="middle_align"
                    onClick={[Function]}
                    title="Middle Align"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
                <Button
                  disabled={false}
                  icon={<svgr-url />}
                  id="bottom_align"
                  onClick={[MockFunction]}
                  title="Bottom Align"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={false}
                    id="bottom_align"
                    onClick={[Function]}
                    title="Bottom Align"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
              </div>
              <div
                className="half right"
              >
                <Button
                  disabled={true}
                  icon={<svgr-url />}
                  id="vdist"
                  onClick={[MockFunction]}
                  title="Vertical Distribute"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={true}
                    id="vdist"
                    onClick={[Function]}
                    title="Vertical Distribute"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
                <Button
                  disabled={false}
                  icon={<svgr-url />}
                  id="left_align"
                  onClick={[MockFunction]}
                  title="Left Align"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={false}
                    id="left_align"
                    onClick={[Function]}
                    title="Left Align"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
                <Button
                  disabled={false}
                  icon={<svgr-url />}
                  id="center_align"
                  onClick={[MockFunction]}
                  title="Center Align"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={false}
                    id="center_align"
                    onClick={[Function]}
                    title="Center Align"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
                <Button
                  disabled={false}
                  icon={<svgr-url />}
                  id="right_align"
                  onClick={[MockFunction]}
                  title="Right Align"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={false}
                    id="right_align"
                    onClick={[Function]}
                    title="Right Align"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
              </div>
            </div>
            <div
              className="row"
            >
              <div
                className="half left"
              >
                <Button
                  disabled={false}
                  icon={<svgr-url />}
                  id="group"
                  onClick={[Function]}
                  title="Group"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={false}
                    id="group"
                    onClick={[Function]}
                    title="Group"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
                <Button
                  disabled={false}
                  icon={<svgr-url />}
                  id="ungroup"
                  onClick={[Function]}
                  title="Ungroup"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={false}
                    id="ungroup"
                    onClick={[Function]}
                    title="Ungroup"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
              </div>
              <div
                className="half right"
              >
                <Button
                  disabled={true}
                  icon={<svgr-url />}
                  id="union"
                  onClick={[Function]}
                  title="Union"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={true}
                    id="union"
                    onClick={[Function]}
                    title="Union"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
                <Button
                  disabled={true}
                  icon={<svgr-url />}
                  id="subtract"
                  onClick={[Function]}
                  title="Subtract"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={true}
                    id="subtract"
                    onClick={[Function]}
                    title="Subtract"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
                <Button
                  disabled={true}
                  icon={<svgr-url />}
                  id="intersect"
                  onClick={[Function]}
                  title="Intersect"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={true}
                    id="intersect"
                    onClick={[Function]}
                    title="Intersect"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
                <Button
                  disabled={true}
                  icon={<svgr-url />}
                  id="difference"
                  onClick={[Function]}
                  title="Difference"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={true}
                    id="difference"
                    onClick={[Function]}
                    title="Difference"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
              </div>
            </div>
          </FormProvider>
        </ProviderChildren>
      </ConfigProvider>
    </div>
    <DummyDimensionPanel
      elem={
        <g
          id="svg_1"
        />
      }
      getDimensionValues={[MockFunction]}
      updateDimensionValues={[MockFunction]}
    >
      <div>
        This is dummy DimensionPanel
      </div>
    </DummyDimensionPanel>
    <DummyOptionsPanel
      elem={
        <g
          id="svg_1"
        />
      }
      polygonSides={5}
      rx={1}
      updateDimensionValues={[MockFunction]}
      updateObjectPanel={[MockFunction]}
    >
      <div>
        This is dummy OptionsPanel
      </div>
    </DummyOptionsPanel>
    <DummyActionsPanel
      elem={
        <g
          id="svg_1"
        />
      }
    >
      <div>
        This is dummy ActionsPanel
      </div>
    </DummyActionsPanel>
  </div>
</ObjectPanel>
`;

exports[`should render correctly one element not g element 1`] = `
<ObjectPanel
  elem={
    <rect
      id="svg_1"
    />
  }
>
  <div
    className="container"
    id="object-panel"
  >
    <div
      className="tools"
    >
      <ConfigProvider
        theme={
          {
            "components": {
              "Button": {
                "colorText": "#494949",
                "colorTextDisabled": "#CECECE",
                "controlHeight": 24,
                "fontSize": 24,
                "lineHeight": 1,
                "lineWidth": 0,
              },
            },
          }
        }
      >
        <ProviderChildren
          parentContext={
            {
              "getPrefixCls": [Function],
              "iconPrefixCls": "anticon",
            }
          }
          theme={
            {
              "components": {
                "Button": {
                  "colorText": "#494949",
                  "colorTextDisabled": "#CECECE",
                  "controlHeight": 24,
                  "fontSize": 24,
                  "lineHeight": 1,
                  "lineWidth": 0,
                },
              },
            }
          }
        >
          <FormProvider
            validateMessages={
              {
                "array": {
                  "len": "Must be \${len} \${label}",
                  "max": "At most \${max} \${label}",
                  "min": "At least \${min} \${label}",
                  "range": "The amount of \${label} must be between \${min}-\${max}",
                },
                "date": {
                  "format": "\${label} date format is invalid",
                  "invalid": "\${label} is an invalid date",
                  "parse": "\${label} cannot be converted to a date",
                },
                "default": "Field validation error for \${label}",
                "enum": "\${label} must be one of [\${enum}]",
                "number": {
                  "len": "\${label} must be equal to \${len}",
                  "max": "\${label} must be maximum \${max}",
                  "min": "\${label} must be minimum \${min}",
                  "range": "\${label} must be between \${min}-\${max}",
                },
                "pattern": {
                  "mismatch": "\${label} does not match the pattern \${pattern}",
                },
                "required": "Please enter \${label}",
                "string": {
                  "len": "\${label} must be \${len} characters",
                  "max": "\${label} must be up to \${max} characters",
                  "min": "\${label} must be at least \${min} characters",
                  "range": "\${label} must be between \${min}-\${max} characters",
                },
                "types": {
                  "array": "\${label} is not a valid \${type}",
                  "boolean": "\${label} is not a valid \${type}",
                  "date": "\${label} is not a valid \${type}",
                  "email": "\${label} is not a valid \${type}",
                  "float": "\${label} is not a valid \${type}",
                  "hex": "\${label} is not a valid \${type}",
                  "integer": "\${label} is not a valid \${type}",
                  "method": "\${label} is not a valid \${type}",
                  "number": "\${label} is not a valid \${type}",
                  "object": "\${label} is not a valid \${type}",
                  "regexp": "\${label} is not a valid \${type}",
                  "string": "\${label} is not a valid \${type}",
                  "url": "\${label} is not a valid \${type}",
                },
                "whitespace": "\${label} cannot be a blank character",
              }
            }
          >
            <div
              className="row"
            >
              <div
                className="half left sep"
              >
                <Button
                  disabled={true}
                  icon={<svgr-url />}
                  id="hdist"
                  onClick={[MockFunction]}
                  title="Horizontal Distribute"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={true}
                    id="hdist"
                    onClick={[Function]}
                    title="Horizontal Distribute"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
                <Button
                  disabled={false}
                  icon={<svgr-url />}
                  id="top_align"
                  onClick={[MockFunction]}
                  title="Top Align"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={false}
                    id="top_align"
                    onClick={[Function]}
                    title="Top Align"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
                <Button
                  disabled={false}
                  icon={<svgr-url />}
                  id="middle_align"
                  onClick={[MockFunction]}
                  title="Middle Align"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={false}
                    id="middle_align"
                    onClick={[Function]}
                    title="Middle Align"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
                <Button
                  disabled={false}
                  icon={<svgr-url />}
                  id="bottom_align"
                  onClick={[MockFunction]}
                  title="Bottom Align"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={false}
                    id="bottom_align"
                    onClick={[Function]}
                    title="Bottom Align"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
              </div>
              <div
                className="half right"
              >
                <Button
                  disabled={true}
                  icon={<svgr-url />}
                  id="vdist"
                  onClick={[MockFunction]}
                  title="Vertical Distribute"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={true}
                    id="vdist"
                    onClick={[Function]}
                    title="Vertical Distribute"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
                <Button
                  disabled={false}
                  icon={<svgr-url />}
                  id="left_align"
                  onClick={[MockFunction]}
                  title="Left Align"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={false}
                    id="left_align"
                    onClick={[Function]}
                    title="Left Align"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
                <Button
                  disabled={false}
                  icon={<svgr-url />}
                  id="center_align"
                  onClick={[MockFunction]}
                  title="Center Align"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={false}
                    id="center_align"
                    onClick={[Function]}
                    title="Center Align"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
                <Button
                  disabled={false}
                  icon={<svgr-url />}
                  id="right_align"
                  onClick={[MockFunction]}
                  title="Right Align"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={false}
                    id="right_align"
                    onClick={[Function]}
                    title="Right Align"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
              </div>
            </div>
            <div
              className="row"
            >
              <div
                className="half left"
              >
                <Button
                  disabled={false}
                  icon={<svgr-url />}
                  id="group"
                  onClick={[Function]}
                  title="Group"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={false}
                    id="group"
                    onClick={[Function]}
                    title="Group"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
                <Button
                  disabled={true}
                  icon={<svgr-url />}
                  id="ungroup"
                  onClick={[Function]}
                  title="Ungroup"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={true}
                    id="ungroup"
                    onClick={[Function]}
                    title="Ungroup"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
              </div>
              <div
                className="half right"
              >
                <Button
                  disabled={true}
                  icon={<svgr-url />}
                  id="union"
                  onClick={[Function]}
                  title="Union"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={true}
                    id="union"
                    onClick={[Function]}
                    title="Union"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
                <Button
                  disabled={true}
                  icon={<svgr-url />}
                  id="subtract"
                  onClick={[Function]}
                  title="Subtract"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={true}
                    id="subtract"
                    onClick={[Function]}
                    title="Subtract"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
                <Button
                  disabled={true}
                  icon={<svgr-url />}
                  id="intersect"
                  onClick={[Function]}
                  title="Intersect"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={true}
                    id="intersect"
                    onClick={[Function]}
                    title="Intersect"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
                <Button
                  disabled={true}
                  icon={<svgr-url />}
                  id="difference"
                  onClick={[Function]}
                  title="Difference"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={true}
                    id="difference"
                    onClick={[Function]}
                    title="Difference"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
              </div>
            </div>
          </FormProvider>
        </ProviderChildren>
      </ConfigProvider>
    </div>
    <DummyDimensionPanel
      elem={
        <rect
          id="svg_1"
        />
      }
      getDimensionValues={[MockFunction]}
      updateDimensionValues={[MockFunction]}
    >
      <div>
        This is dummy DimensionPanel
      </div>
    </DummyDimensionPanel>
    <DummyOptionsPanel
      elem={
        <rect
          id="svg_1"
        />
      }
      polygonSides={5}
      rx={1}
      updateDimensionValues={[MockFunction]}
      updateObjectPanel={[MockFunction]}
    >
      <div>
        This is dummy OptionsPanel
      </div>
    </DummyOptionsPanel>
    <DummyActionsPanel
      elem={
        <rect
          id="svg_1"
        />
      }
    >
      <div>
        This is dummy ActionsPanel
      </div>
    </DummyActionsPanel>
  </div>
</ObjectPanel>
`;

exports[`should render correctly two elements contains other types of elements 1`] = `
<ObjectPanel
  elem={
    <g
      data-tempgroup="true"
      id="svg_3"
    >
      <path
        id="svg_1"
      />
      <line
        id="svg_2"
      />
    </g>
  }
>
  <div
    className="container"
    id="object-panel"
  >
    <div
      className="tools"
    >
      <ConfigProvider
        theme={
          {
            "components": {
              "Button": {
                "colorText": "#494949",
                "colorTextDisabled": "#CECECE",
                "controlHeight": 24,
                "fontSize": 24,
                "lineHeight": 1,
                "lineWidth": 0,
              },
            },
          }
        }
      >
        <ProviderChildren
          parentContext={
            {
              "getPrefixCls": [Function],
              "iconPrefixCls": "anticon",
            }
          }
          theme={
            {
              "components": {
                "Button": {
                  "colorText": "#494949",
                  "colorTextDisabled": "#CECECE",
                  "controlHeight": 24,
                  "fontSize": 24,
                  "lineHeight": 1,
                  "lineWidth": 0,
                },
              },
            }
          }
        >
          <FormProvider
            validateMessages={
              {
                "array": {
                  "len": "Must be \${len} \${label}",
                  "max": "At most \${max} \${label}",
                  "min": "At least \${min} \${label}",
                  "range": "The amount of \${label} must be between \${min}-\${max}",
                },
                "date": {
                  "format": "\${label} date format is invalid",
                  "invalid": "\${label} is an invalid date",
                  "parse": "\${label} cannot be converted to a date",
                },
                "default": "Field validation error for \${label}",
                "enum": "\${label} must be one of [\${enum}]",
                "number": {
                  "len": "\${label} must be equal to \${len}",
                  "max": "\${label} must be maximum \${max}",
                  "min": "\${label} must be minimum \${min}",
                  "range": "\${label} must be between \${min}-\${max}",
                },
                "pattern": {
                  "mismatch": "\${label} does not match the pattern \${pattern}",
                },
                "required": "Please enter \${label}",
                "string": {
                  "len": "\${label} must be \${len} characters",
                  "max": "\${label} must be up to \${max} characters",
                  "min": "\${label} must be at least \${min} characters",
                  "range": "\${label} must be between \${min}-\${max} characters",
                },
                "types": {
                  "array": "\${label} is not a valid \${type}",
                  "boolean": "\${label} is not a valid \${type}",
                  "date": "\${label} is not a valid \${type}",
                  "email": "\${label} is not a valid \${type}",
                  "float": "\${label} is not a valid \${type}",
                  "hex": "\${label} is not a valid \${type}",
                  "integer": "\${label} is not a valid \${type}",
                  "method": "\${label} is not a valid \${type}",
                  "number": "\${label} is not a valid \${type}",
                  "object": "\${label} is not a valid \${type}",
                  "regexp": "\${label} is not a valid \${type}",
                  "string": "\${label} is not a valid \${type}",
                  "url": "\${label} is not a valid \${type}",
                },
                "whitespace": "\${label} cannot be a blank character",
              }
            }
          >
            <div
              className="row"
            >
              <div
                className="half left sep"
              >
                <Button
                  disabled={true}
                  icon={<svgr-url />}
                  id="hdist"
                  onClick={[MockFunction]}
                  title="Horizontal Distribute"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={true}
                    id="hdist"
                    onClick={[Function]}
                    title="Horizontal Distribute"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
                <Button
                  disabled={false}
                  icon={<svgr-url />}
                  id="top_align"
                  onClick={[MockFunction]}
                  title="Top Align"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={false}
                    id="top_align"
                    onClick={[Function]}
                    title="Top Align"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
                <Button
                  disabled={false}
                  icon={<svgr-url />}
                  id="middle_align"
                  onClick={[MockFunction]}
                  title="Middle Align"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={false}
                    id="middle_align"
                    onClick={[Function]}
                    title="Middle Align"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
                <Button
                  disabled={false}
                  icon={<svgr-url />}
                  id="bottom_align"
                  onClick={[MockFunction]}
                  title="Bottom Align"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={false}
                    id="bottom_align"
                    onClick={[Function]}
                    title="Bottom Align"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
              </div>
              <div
                className="half right"
              >
                <Button
                  disabled={true}
                  icon={<svgr-url />}
                  id="vdist"
                  onClick={[MockFunction]}
                  title="Vertical Distribute"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={true}
                    id="vdist"
                    onClick={[Function]}
                    title="Vertical Distribute"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
                <Button
                  disabled={false}
                  icon={<svgr-url />}
                  id="left_align"
                  onClick={[MockFunction]}
                  title="Left Align"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={false}
                    id="left_align"
                    onClick={[Function]}
                    title="Left Align"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
                <Button
                  disabled={false}
                  icon={<svgr-url />}
                  id="center_align"
                  onClick={[MockFunction]}
                  title="Center Align"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={false}
                    id="center_align"
                    onClick={[Function]}
                    title="Center Align"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
                <Button
                  disabled={false}
                  icon={<svgr-url />}
                  id="right_align"
                  onClick={[MockFunction]}
                  title="Right Align"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={false}
                    id="right_align"
                    onClick={[Function]}
                    title="Right Align"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
              </div>
            </div>
            <div
              className="row"
            >
              <div
                className="half left"
              >
                <Button
                  disabled={false}
                  icon={<svgr-url />}
                  id="group"
                  onClick={[Function]}
                  title="Group"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={false}
                    id="group"
                    onClick={[Function]}
                    title="Group"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
                <Button
                  disabled={true}
                  icon={<svgr-url />}
                  id="ungroup"
                  onClick={[Function]}
                  title="Ungroup"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={true}
                    id="ungroup"
                    onClick={[Function]}
                    title="Ungroup"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
              </div>
              <div
                className="half right"
              >
                <Button
                  disabled={true}
                  icon={<svgr-url />}
                  id="union"
                  onClick={[Function]}
                  title="Union"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={true}
                    id="union"
                    onClick={[Function]}
                    title="Union"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
                <Button
                  disabled={true}
                  icon={<svgr-url />}
                  id="subtract"
                  onClick={[Function]}
                  title="Subtract"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={true}
                    id="subtract"
                    onClick={[Function]}
                    title="Subtract"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
                <Button
                  disabled={true}
                  icon={<svgr-url />}
                  id="intersect"
                  onClick={[Function]}
                  title="Intersect"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={true}
                    id="intersect"
                    onClick={[Function]}
                    title="Intersect"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
                <Button
                  disabled={true}
                  icon={<svgr-url />}
                  id="difference"
                  onClick={[Function]}
                  title="Difference"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={true}
                    id="difference"
                    onClick={[Function]}
                    title="Difference"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
              </div>
            </div>
          </FormProvider>
        </ProviderChildren>
      </ConfigProvider>
    </div>
    <DummyDimensionPanel
      elem={
        <g
          data-tempgroup="true"
          id="svg_3"
        >
          <path
            id="svg_1"
          />
          <line
            id="svg_2"
          />
        </g>
      }
      getDimensionValues={[MockFunction]}
      updateDimensionValues={[MockFunction]}
    >
      <div>
        This is dummy DimensionPanel
      </div>
    </DummyDimensionPanel>
    <DummyOptionsPanel
      elem={
        <g
          data-tempgroup="true"
          id="svg_3"
        >
          <path
            id="svg_1"
          />
          <line
            id="svg_2"
          />
        </g>
      }
      polygonSides={5}
      rx={1}
      updateDimensionValues={[MockFunction]}
      updateObjectPanel={[MockFunction]}
    >
      <div>
        This is dummy OptionsPanel
      </div>
    </DummyOptionsPanel>
    <DummyActionsPanel
      elem={
        <g
          data-tempgroup="true"
          id="svg_3"
        >
          <path
            id="svg_1"
          />
          <line
            id="svg_2"
          />
        </g>
      }
    >
      <div>
        This is dummy ActionsPanel
      </div>
    </DummyActionsPanel>
  </div>
</ObjectPanel>
`;

exports[`should render correctly two elements contains rect, polygon or ellipse elements 1`] = `
<ObjectPanel
  elem={
    <g
      data-tempgroup="true"
      id="svg_3"
    >
      <rect
        id="svg_1"
      />
      <ellipse
        id="svg_2"
      />
    </g>
  }
>
  <div
    className="container"
    id="object-panel"
  >
    <div
      className="tools"
    >
      <ConfigProvider
        theme={
          {
            "components": {
              "Button": {
                "colorText": "#494949",
                "colorTextDisabled": "#CECECE",
                "controlHeight": 24,
                "fontSize": 24,
                "lineHeight": 1,
                "lineWidth": 0,
              },
            },
          }
        }
      >
        <ProviderChildren
          parentContext={
            {
              "getPrefixCls": [Function],
              "iconPrefixCls": "anticon",
            }
          }
          theme={
            {
              "components": {
                "Button": {
                  "colorText": "#494949",
                  "colorTextDisabled": "#CECECE",
                  "controlHeight": 24,
                  "fontSize": 24,
                  "lineHeight": 1,
                  "lineWidth": 0,
                },
              },
            }
          }
        >
          <FormProvider
            validateMessages={
              {
                "array": {
                  "len": "Must be \${len} \${label}",
                  "max": "At most \${max} \${label}",
                  "min": "At least \${min} \${label}",
                  "range": "The amount of \${label} must be between \${min}-\${max}",
                },
                "date": {
                  "format": "\${label} date format is invalid",
                  "invalid": "\${label} is an invalid date",
                  "parse": "\${label} cannot be converted to a date",
                },
                "default": "Field validation error for \${label}",
                "enum": "\${label} must be one of [\${enum}]",
                "number": {
                  "len": "\${label} must be equal to \${len}",
                  "max": "\${label} must be maximum \${max}",
                  "min": "\${label} must be minimum \${min}",
                  "range": "\${label} must be between \${min}-\${max}",
                },
                "pattern": {
                  "mismatch": "\${label} does not match the pattern \${pattern}",
                },
                "required": "Please enter \${label}",
                "string": {
                  "len": "\${label} must be \${len} characters",
                  "max": "\${label} must be up to \${max} characters",
                  "min": "\${label} must be at least \${min} characters",
                  "range": "\${label} must be between \${min}-\${max} characters",
                },
                "types": {
                  "array": "\${label} is not a valid \${type}",
                  "boolean": "\${label} is not a valid \${type}",
                  "date": "\${label} is not a valid \${type}",
                  "email": "\${label} is not a valid \${type}",
                  "float": "\${label} is not a valid \${type}",
                  "hex": "\${label} is not a valid \${type}",
                  "integer": "\${label} is not a valid \${type}",
                  "method": "\${label} is not a valid \${type}",
                  "number": "\${label} is not a valid \${type}",
                  "object": "\${label} is not a valid \${type}",
                  "regexp": "\${label} is not a valid \${type}",
                  "string": "\${label} is not a valid \${type}",
                  "url": "\${label} is not a valid \${type}",
                },
                "whitespace": "\${label} cannot be a blank character",
              }
            }
          >
            <div
              className="row"
            >
              <div
                className="half left sep"
              >
                <Button
                  disabled={true}
                  icon={<svgr-url />}
                  id="hdist"
                  onClick={[MockFunction]}
                  title="Horizontal Distribute"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={true}
                    id="hdist"
                    onClick={[Function]}
                    title="Horizontal Distribute"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
                <Button
                  disabled={false}
                  icon={<svgr-url />}
                  id="top_align"
                  onClick={[MockFunction]}
                  title="Top Align"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={false}
                    id="top_align"
                    onClick={[Function]}
                    title="Top Align"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
                <Button
                  disabled={false}
                  icon={<svgr-url />}
                  id="middle_align"
                  onClick={[MockFunction]}
                  title="Middle Align"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={false}
                    id="middle_align"
                    onClick={[Function]}
                    title="Middle Align"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
                <Button
                  disabled={false}
                  icon={<svgr-url />}
                  id="bottom_align"
                  onClick={[MockFunction]}
                  title="Bottom Align"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={false}
                    id="bottom_align"
                    onClick={[Function]}
                    title="Bottom Align"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
              </div>
              <div
                className="half right"
              >
                <Button
                  disabled={true}
                  icon={<svgr-url />}
                  id="vdist"
                  onClick={[MockFunction]}
                  title="Vertical Distribute"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={true}
                    id="vdist"
                    onClick={[Function]}
                    title="Vertical Distribute"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
                <Button
                  disabled={false}
                  icon={<svgr-url />}
                  id="left_align"
                  onClick={[MockFunction]}
                  title="Left Align"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={false}
                    id="left_align"
                    onClick={[Function]}
                    title="Left Align"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
                <Button
                  disabled={false}
                  icon={<svgr-url />}
                  id="center_align"
                  onClick={[MockFunction]}
                  title="Center Align"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={false}
                    id="center_align"
                    onClick={[Function]}
                    title="Center Align"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
                <Button
                  disabled={false}
                  icon={<svgr-url />}
                  id="right_align"
                  onClick={[MockFunction]}
                  title="Right Align"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={false}
                    id="right_align"
                    onClick={[Function]}
                    title="Right Align"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
              </div>
            </div>
            <div
              className="row"
            >
              <div
                className="half left"
              >
                <Button
                  disabled={false}
                  icon={<svgr-url />}
                  id="group"
                  onClick={[Function]}
                  title="Group"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={false}
                    id="group"
                    onClick={[Function]}
                    title="Group"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
                <Button
                  disabled={true}
                  icon={<svgr-url />}
                  id="ungroup"
                  onClick={[Function]}
                  title="Ungroup"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={true}
                    id="ungroup"
                    onClick={[Function]}
                    title="Ungroup"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
              </div>
              <div
                className="half right"
              >
                <Button
                  disabled={false}
                  icon={<svgr-url />}
                  id="union"
                  onClick={[Function]}
                  title="Union"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={false}
                    id="union"
                    onClick={[Function]}
                    title="Union"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
                <Button
                  disabled={false}
                  icon={<svgr-url />}
                  id="subtract"
                  onClick={[Function]}
                  title="Subtract"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={false}
                    id="subtract"
                    onClick={[Function]}
                    title="Subtract"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
                <Button
                  disabled={false}
                  icon={<svgr-url />}
                  id="intersect"
                  onClick={[Function]}
                  title="Intersect"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={false}
                    id="intersect"
                    onClick={[Function]}
                    title="Intersect"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
                <Button
                  disabled={false}
                  icon={<svgr-url />}
                  id="difference"
                  onClick={[Function]}
                  title="Difference"
                  type="text"
                >
                  <Empty />
                  <button
                    className="ant-btn css-dev-only-do-not-override-hash ant-btn-text ant-btn-icon-only"
                    disabled={false}
                    id="difference"
                    onClick={[Function]}
                    title="Difference"
                    type="button"
                  >
                    <svgr-url />
                  </button>
                </Button>
              </div>
            </div>
          </FormProvider>
        </ProviderChildren>
      </ConfigProvider>
    </div>
    <DummyDimensionPanel
      elem={
        <g
          data-tempgroup="true"
          id="svg_3"
        >
          <rect
            id="svg_1"
          />
          <ellipse
            id="svg_2"
          />
        </g>
      }
      getDimensionValues={[MockFunction]}
      updateDimensionValues={[MockFunction]}
    >
      <div>
        This is dummy DimensionPanel
      </div>
    </DummyDimensionPanel>
    <DummyOptionsPanel
      elem={
        <g
          data-tempgroup="true"
          id="svg_3"
        >
          <rect
            id="svg_1"
          />
          <ellipse
            id="svg_2"
          />
        </g>
      }
      polygonSides={5}
      rx={1}
      updateDimensionValues={[MockFunction]}
      updateObjectPanel={[MockFunction]}
    >
      <div>
        This is dummy OptionsPanel
      </div>
    </DummyOptionsPanel>
    <DummyActionsPanel
      elem={
        <g
          data-tempgroup="true"
          id="svg_3"
        >
          <rect
            id="svg_1"
          />
          <ellipse
            id="svg_2"
          />
        </g>
      }
    >
      <div>
        This is dummy ActionsPanel
      </div>
    </DummyActionsPanel>
  </div>
</ObjectPanel>
`;
