// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render correctly 1`] = `
<Prompt
  caption="New Preset Name"
  defaultValue=""
  onCancel={[MockFunction]}
  onClose={[MockFunction]}
  onYes={[MockFunction]}
>
  <Modal
    cancelText="Cancel"
    centered={true}
    modalRender={[Function]}
    okText="OK"
    onCancel={[Function]}
    onOk={[Function]}
    open={true}
    title="New Preset Name"
  >
    <Empty />
    <NoCompactStyle>
      <NoFormStyle
        override={true}
        status={true}
      >
        <Dialog
          cancelText="Cancel"
          className="css-dev-only-do-not-override-acm2ia"
          closeIcon={
            <span
              className="ant-modal-close-x"
            >
              <ForwardRef(CloseOutlined)
                className="ant-modal-close-icon"
              />
            </span>
          }
          focusTriggerAfterClose={true}
          footer={
            <LocaleReceiver
              componentName="Modal"
              defaultLocale={
                Object {
                  "cancelText": "Cancel",
                  "justOkText": "OK",
                  "okText": "OK",
                }
              }
            >
              [Function]
            </LocaleReceiver>
          }
          maskTransitionName="ant-fade"
          modalRender={[Function]}
          okText="OK"
          onCancel={[Function]}
          onClose={[Function]}
          onOk={[Function]}
          prefixCls="ant-modal"
          rootClassName="css-dev-only-do-not-override-acm2ia"
          title="New Preset Name"
          transitionName="ant-zoom"
          visible={true}
          width={520}
          wrapClassName="ant-modal-centered"
        >
          <Portal
            autoDestroy={false}
            autoLock={true}
            open={true}
          >
            <Portal
              containerInfo={
                <div>
                  <div
                    class="ant-modal-root css-dev-only-do-not-override-acm2ia"
                  >
                    <div
                      class="ant-modal-mask"
                    />
                    <div
                      class="ant-modal-wrap ant-modal-centered"
                      tabindex="-1"
                    >
                      <div
                        aria-labelledby="test-id"
                        aria-modal="true"
                        class="ant-modal css-dev-only-do-not-override-acm2ia"
                        role="dialog"
                        style="width: 520px;"
                      >
                        <div
                          aria-hidden="true"
                          style="width: 0px; height: 0px; overflow: hidden; outline: none;"
                          tabindex="0"
                        />
                        <div
                          class="ant-modal-content react-draggable"
                          style="transform: translate(0px,0px);"
                        >
                          <button
                            aria-label="Close"
                            class="ant-modal-close"
                            type="button"
                          >
                            <span
                              class="ant-modal-close-x"
                            >
                              <span
                                aria-label="close"
                                class="anticon anticon-close ant-modal-close-icon"
                                role="img"
                              >
                                <svg
                                  aria-hidden="true"
                                  data-icon="close"
                                  fill="currentColor"
                                  focusable="false"
                                  height="1em"
                                  viewBox="64 64 896 896"
                                  width="1em"
                                >
                                  <path
                                    d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                  />
                                </svg>
                              </span>
                            </span>
                          </button>
                          <div
                            class="ant-modal-header"
                          >
                            <div
                              class="ant-modal-title"
                              id="test-id"
                            >
                              New Preset Name
                            </div>
                          </div>
                          <div
                            class="ant-modal-body"
                          >
                            <p />
                            <input
                              class="ant-input css-dev-only-do-not-override-acm2ia text-input"
                              type="text"
                              value=""
                            />
                          </div>
                          <div
                            class="ant-modal-footer"
                          >
                            <button
                              class="ant-btn css-dev-only-do-not-override-acm2ia ant-btn-default"
                              type="button"
                            >
                              <span>
                                Cancel
                              </span>
                            </button>
                            <button
                              class="ant-btn css-dev-only-do-not-override-acm2ia ant-btn-primary"
                              type="button"
                            >
                              <span>
                                OK
                              </span>
                            </button>
                          </div>
                        </div>
                        <div
                          aria-hidden="true"
                          style="width: 0px; height: 0px; overflow: hidden; outline: none;"
                          tabindex="0"
                        />
                      </div>
                    </div>
                  </div>
                </div>
              }
            >
              <Dialog
                afterClose={[Function]}
                cancelText="Cancel"
                className="css-dev-only-do-not-override-acm2ia"
                closeIcon={
                  <span
                    className="ant-modal-close-x"
                  >
                    <ForwardRef(CloseOutlined)
                      className="ant-modal-close-icon"
                    />
                  </span>
                }
                destroyOnClose={false}
                focusTriggerAfterClose={true}
                footer={
                  <LocaleReceiver
                    componentName="Modal"
                    defaultLocale={
                      Object {
                        "cancelText": "Cancel",
                        "justOkText": "OK",
                        "okText": "OK",
                      }
                    }
                  >
                    [Function]
                  </LocaleReceiver>
                }
                maskTransitionName="ant-fade"
                modalRender={[Function]}
                okText="OK"
                onCancel={[Function]}
                onClose={[Function]}
                onOk={[Function]}
                prefixCls="ant-modal"
                rootClassName="css-dev-only-do-not-override-acm2ia"
                title="New Preset Name"
                transitionName="ant-zoom"
                visible={true}
                width={520}
                wrapClassName="ant-modal-centered"
              >
                <div
                  className="ant-modal-root css-dev-only-do-not-override-acm2ia"
                >
                  <Mask
                    motionName="ant-fade"
                    prefixCls="ant-modal"
                    style={
                      Object {
                        "zIndex": undefined,
                      }
                    }
                    visible={true}
                  >
                    <CSSMotion
                      key="mask"
                      leavedClassName="ant-modal-mask-hidden"
                      motionName="ant-fade"
                      visible={true}
                    >
                      <DomWrapper>
                        <div
                          className="ant-modal-mask"
                          style={
                            Object {
                              "zIndex": undefined,
                            }
                          }
                        />
                      </DomWrapper>
                    </CSSMotion>
                  </Mask>
                  <div
                    className="ant-modal-wrap ant-modal-centered"
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    style={
                      Object {
                        "display": null,
                        "zIndex": undefined,
                      }
                    }
                    tabIndex={-1}
                  >
                    <Content
                      afterClose={[Function]}
                      ariaId="test-id"
                      cancelText="Cancel"
                      className="css-dev-only-do-not-override-acm2ia"
                      closable={true}
                      closeIcon={
                        <span
                          className="ant-modal-close-x"
                        >
                          <ForwardRef(CloseOutlined)
                            className="ant-modal-close-icon"
                          />
                        </span>
                      }
                      destroyOnClose={false}
                      focusTriggerAfterClose={true}
                      footer={
                        <LocaleReceiver
                          componentName="Modal"
                          defaultLocale={
                            Object {
                              "cancelText": "Cancel",
                              "justOkText": "OK",
                              "okText": "OK",
                            }
                          }
                        >
                          [Function]
                        </LocaleReceiver>
                      }
                      maskTransitionName="ant-fade"
                      modalRender={[Function]}
                      motionName="ant-zoom"
                      okText="OK"
                      onCancel={[Function]}
                      onClose={[Function]}
                      onMouseDown={[Function]}
                      onMouseUp={[Function]}
                      onOk={[Function]}
                      onVisibleChanged={[Function]}
                      prefixCls="ant-modal"
                      rootClassName="css-dev-only-do-not-override-acm2ia"
                      title="New Preset Name"
                      transitionName="ant-zoom"
                      visible={true}
                      width={520}
                      wrapClassName="ant-modal-centered"
                    >
                      <CSSMotion
                        motionName="ant-zoom"
                        onAppearPrepare={[Function]}
                        onEnterPrepare={[Function]}
                        onVisibleChanged={[Function]}
                        removeOnLeave={false}
                        visible={true}
                      >
                        <DomWrapper>
                          <Panel
                            afterClose={[Function]}
                            ariaId="test-id"
                            cancelText="Cancel"
                            className="css-dev-only-do-not-override-acm2ia"
                            closable={true}
                            closeIcon={
                              <span
                                className="ant-modal-close-x"
                              >
                                <ForwardRef(CloseOutlined)
                                  className="ant-modal-close-icon"
                                />
                              </span>
                            }
                            destroyOnClose={false}
                            focusTriggerAfterClose={true}
                            footer={
                              <LocaleReceiver
                                componentName="Modal"
                                defaultLocale={
                                  Object {
                                    "cancelText": "Cancel",
                                    "justOkText": "OK",
                                    "okText": "OK",
                                  }
                                }
                              >
                                [Function]
                              </LocaleReceiver>
                            }
                            holderRef={[Function]}
                            maskTransitionName="ant-fade"
                            modalRender={[Function]}
                            motionName="ant-zoom"
                            okText="OK"
                            onCancel={[Function]}
                            onClose={[Function]}
                            onMouseDown={[Function]}
                            onMouseUp={[Function]}
                            onOk={[Function]}
                            onVisibleChanged={[Function]}
                            prefixCls="ant-modal"
                            rootClassName="css-dev-only-do-not-override-acm2ia"
                            style={Object {}}
                            title="New Preset Name"
                            transitionName="ant-zoom"
                            visible={true}
                            width={520}
                            wrapClassName="ant-modal-centered"
                          >
                            <div
                              aria-labelledby="test-id"
                              aria-modal="true"
                              className="ant-modal css-dev-only-do-not-override-acm2ia"
                              key="dialog-element"
                              onMouseDown={[Function]}
                              onMouseUp={[Function]}
                              role="dialog"
                              style={
                                Object {
                                  "width": 520,
                                }
                              }
                            >
                              <div
                                aria-hidden="true"
                                style={
                                  Object {
                                    "height": 0,
                                    "outline": "none",
                                    "overflow": "hidden",
                                    "width": 0,
                                  }
                                }
                                tabIndex={0}
                              />
                              <Component
                                shouldUpdate={true}
                              >
                                <Draggable
                                  allowAnyClick={false}
                                  axis="both"
                                  bounds={false}
                                  defaultClassName="react-draggable"
                                  defaultClassNameDragged="react-draggable-dragged"
                                  defaultClassNameDragging="react-draggable-dragging"
                                  defaultPosition={
                                    Object {
                                      "x": 0,
                                      "y": 0,
                                    }
                                  }
                                  disabled={false}
                                  enableUserSelectHack={true}
                                  onDrag={[Function]}
                                  onMouseDown={[Function]}
                                  onStart={[Function]}
                                  onStop={[Function]}
                                  scale={1}
                                >
                                  <DraggableCore
                                    allowAnyClick={false}
                                    disabled={false}
                                    enableUserSelectHack={true}
                                    onDrag={[Function]}
                                    onMouseDown={[Function]}
                                    onStart={[Function]}
                                    onStop={[Function]}
                                    scale={1}
                                  >
                                    <div
                                      className="ant-modal-content react-draggable"
                                      onMouseDown={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      style={
                                        Object {
                                          "transform": "translate(0px,0px)",
                                        }
                                      }
                                      transform={null}
                                    >
                                      <button
                                        aria-label="Close"
                                        className="ant-modal-close"
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        <span
                                          className="ant-modal-close-x"
                                        >
                                          <ForwardRef(CloseOutlined)
                                            className="ant-modal-close-icon"
                                          >
                                            <AntdIcon
                                              className="ant-modal-close-icon"
                                              icon={
                                                Object {
                                                  "icon": Object {
                                                    "attrs": Object {
                                                      "focusable": "false",
                                                      "viewBox": "64 64 896 896",
                                                    },
                                                    "children": Array [
                                                      Object {
                                                        "attrs": Object {
                                                          "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                        },
                                                        "tag": "path",
                                                      },
                                                    ],
                                                    "tag": "svg",
                                                  },
                                                  "name": "close",
                                                  "theme": "outlined",
                                                }
                                              }
                                            >
                                              <span
                                                aria-label="close"
                                                className="anticon anticon-close ant-modal-close-icon"
                                                role="img"
                                              >
                                                <IconReact
                                                  icon={
                                                    Object {
                                                      "icon": Object {
                                                        "attrs": Object {
                                                          "focusable": "false",
                                                          "viewBox": "64 64 896 896",
                                                        },
                                                        "children": Array [
                                                          Object {
                                                            "attrs": Object {
                                                              "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                            },
                                                            "tag": "path",
                                                          },
                                                        ],
                                                        "tag": "svg",
                                                      },
                                                      "name": "close",
                                                      "theme": "outlined",
                                                    }
                                                  }
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    data-icon="close"
                                                    fill="currentColor"
                                                    focusable="false"
                                                    height="1em"
                                                    key="svg-close"
                                                    viewBox="64 64 896 896"
                                                    width="1em"
                                                  >
                                                    <path
                                                      d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                      key="svg-close-svg-0"
                                                    />
                                                  </svg>
                                                </IconReact>
                                              </span>
                                            </AntdIcon>
                                          </ForwardRef(CloseOutlined)>
                                        </span>
                                      </button>
                                      <div
                                        className="ant-modal-header"
                                      >
                                        <div
                                          className="ant-modal-title"
                                          id="test-id"
                                        >
                                          New Preset Name
                                        </div>
                                      </div>
                                      <div
                                        className="ant-modal-body"
                                      >
                                        <p />
                                        <ForwardRef
                                          autoFocus={true}
                                          className="text-input"
                                          defaultValue=""
                                          onKeyDown={[Function]}
                                          type="text"
                                        >
                                          <Empty />
                                          <ForwardRef
                                            affixWrapperClassName="css-dev-only-do-not-override-acm2ia"
                                            autoFocus={true}
                                            className="text-input"
                                            defaultValue=""
                                            groupClassName="css-dev-only-do-not-override-acm2ia"
                                            inputClassName="css-dev-only-do-not-override-acm2ia"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            prefixCls="ant-input"
                                            type="text"
                                            wrapperClassName="css-dev-only-do-not-override-acm2ia"
                                          >
                                            <BaseInput
                                              affixWrapperClassName="css-dev-only-do-not-override-acm2ia"
                                              autoFocus={true}
                                              className="text-input"
                                              defaultValue=""
                                              focused={false}
                                              groupClassName="css-dev-only-do-not-override-acm2ia"
                                              handleReset={[Function]}
                                              inputElement={
                                                <input
                                                  autoFocus={true}
                                                  className="ant-input css-dev-only-do-not-override-acm2ia text-input"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  type="text"
                                                />
                                              }
                                              prefixCls="ant-input"
                                              suffix={null}
                                              triggerFocus={[Function]}
                                              value=""
                                              wrapperClassName="css-dev-only-do-not-override-acm2ia"
                                            >
                                              <input
                                                autoFocus={true}
                                                className="ant-input css-dev-only-do-not-override-acm2ia text-input"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                type="text"
                                                value=""
                                              />
                                            </BaseInput>
                                          </ForwardRef>
                                        </ForwardRef>
                                      </div>
                                      <div
                                        className="ant-modal-footer"
                                      >
                                        <LocaleReceiver
                                          componentName="Modal"
                                          defaultLocale={
                                            Object {
                                              "cancelText": "Cancel",
                                              "justOkText": "OK",
                                              "okText": "OK",
                                            }
                                          }
                                        >
                                          <Button
                                            onClick={[Function]}
                                          >
                                            <Empty />
                                            <ForwardRef
                                              disabled={false}
                                            >
                                              <InternalWave
                                                disabled={false}
                                              >
                                                <button
                                                  className="ant-btn css-dev-only-do-not-override-acm2ia ant-btn-default"
                                                  disabled={false}
                                                  onClick={[Function]}
                                                  type="button"
                                                >
                                                  <LoadingIcon
                                                    existIcon={false}
                                                    loading={false}
                                                    prefixCls="ant-btn"
                                                  >
                                                    <CSSMotion
                                                      motionName="ant-btn-loading-icon-motion"
                                                      onAppearActive={[Function]}
                                                      onAppearStart={[Function]}
                                                      onEnterActive={[Function]}
                                                      onEnterStart={[Function]}
                                                      onLeaveActive={[Function]}
                                                      onLeaveStart={[Function]}
                                                      removeOnLeave={true}
                                                      visible={false}
                                                    >
                                                      <DomWrapper />
                                                    </CSSMotion>
                                                  </LoadingIcon>
                                                  <span
                                                    key=".0"
                                                  >
                                                    Cancel
                                                  </span>
                                                </button>
                                              </InternalWave>
                                            </ForwardRef>
                                          </Button>
                                          <Button
                                            onClick={[Function]}
                                            type="primary"
                                          >
                                            <Empty />
                                            <ForwardRef
                                              disabled={false}
                                            >
                                              <InternalWave
                                                disabled={false}
                                              >
                                                <button
                                                  className="ant-btn css-dev-only-do-not-override-acm2ia ant-btn-primary"
                                                  disabled={false}
                                                  onClick={[Function]}
                                                  type="button"
                                                >
                                                  <LoadingIcon
                                                    existIcon={false}
                                                    loading={false}
                                                    prefixCls="ant-btn"
                                                  >
                                                    <CSSMotion
                                                      motionName="ant-btn-loading-icon-motion"
                                                      onAppearActive={[Function]}
                                                      onAppearStart={[Function]}
                                                      onEnterActive={[Function]}
                                                      onEnterStart={[Function]}
                                                      onLeaveActive={[Function]}
                                                      onLeaveStart={[Function]}
                                                      removeOnLeave={true}
                                                      visible={false}
                                                    >
                                                      <DomWrapper />
                                                    </CSSMotion>
                                                  </LoadingIcon>
                                                  <span
                                                    key=".0"
                                                  >
                                                    OK
                                                  </span>
                                                </button>
                                              </InternalWave>
                                            </ForwardRef>
                                          </Button>
                                        </LocaleReceiver>
                                      </div>
                                    </div>
                                  </DraggableCore>
                                </Draggable>
                              </Component>
                              <div
                                aria-hidden="true"
                                style={
                                  Object {
                                    "height": 0,
                                    "outline": "none",
                                    "overflow": "hidden",
                                    "width": 0,
                                  }
                                }
                                tabIndex={0}
                              />
                            </div>
                          </Panel>
                        </DomWrapper>
                      </CSSMotion>
                    </Content>
                  </div>
                </div>
              </Dialog>
            </Portal>
          </Portal>
        </Dialog>
      </NoFormStyle>
    </NoCompactStyle>
  </Modal>
</Prompt>
`;
